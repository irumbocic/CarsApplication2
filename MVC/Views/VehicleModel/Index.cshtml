@using X.PagedList.Mvc.Core;
@using X.PagedList;



@model IPagedList<MVC.ViewModels.VehicleModelViewModel>

@using Service.Models;
@using Service.PageSortFilter;

@{ ViewData["Title"] = "Vehicle Model"; }



<div class="container p-3">
    <form asp-action="Index" method="get">
        <div class="col-12">
            <p>
                <label for="searchString">Find Model:</label>
                <input type="text" class="col-9" name="searchString" value="@TempData["SearchString"]" />
                @*<input type="text" class="col-9" name="searchString" value="@TempData["CurrentFilter"]" />*@


                <input type="submit" value="Search" class="btn btn-primary" />

                <a asp-action="Index" class="btn btn-secondary">See All</a>

            </p>
        </div>
    </form>
    <div class="row pt-4">
        <div class="col-10">
            <h2 class="text-secondary">Vehicle Models</h2>
        </div>
        <div class="col-2">
            <a asp-controller="VehicleModel" asp-action="Create" class="btn btn-primary">Add New Model</a>
        </div>
    </div>
    <div class="container p-4">

    </div>



    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
    {
        page = page,
        //currentFilter = ViewData["CurrentFilter"],
        //sortOrder = ViewData["CurrentSort"]
        currentFilter = TempData["CurrentFilter"],
        sortOrder = TempData["CurrentSort"],
        searchString = TempData["SearchString"]
    }),
                    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
                    {
                        DisplayItemSliceAndTotal = true,
                        ContainerDivClasses = new[] { "navigation" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                    })



    @*Dodati if uvijet, ako nema nijedan vehiclemodel onda staviti neku message : "No Vehicle Models found." ili tako nesto*@
    <table class="table table-bordered" style="width:100%">
        <thead class="table-secondary">
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@TempData["NameSortParam"]" asp-route-currentFilter="@TempData["SearchString"]">Name</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@TempData["AbrvSortParam"]" asp-route-currentFilter="@TempData["SearchString"]">Abbreviation</a>

                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@TempData["MakeIdSortParam"]" asp-route-currentFilter="@TempData["SearchString"]">Make Name</a>
                    @*<a asp-action="Index">Make Name</a>*@

                </th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model)
            {

<tr>
    <td width="40%">@obj.Name</td>
    <td width="20%">@obj.Abrv</td>
    <td width="20%">@obj.VehicleMake.Name</td>
    @*<td>@obj.VehicleMakes.Name</td>*@
    <td class="text-center">

        <div class="btn-group-sm">
            <a asp-controller="VehicleModel" asp-route-Id="@obj.Id" asp-action="Edit" class="btn btn-primary">Edit</a>
            <a asp-controller="VehicleModel" asp-route-Id="@obj.Id" asp-action="Delete" class="btn btn-danger">Delete</a>
            <a asp-controller="VehicleModel" asp-route-Id="@obj.Id" asp-action="Details" class="btn btn-secondary">Details</a>
        </div>
    </td>
</tr>            }
        </tbody>
    </table>



    <div class="pull-right">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
                          new
                          {
                              page
                          }),
                        new X.PagedList.Web.Common.PagedListRenderOptionsBase
                        {
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" },
                            Display = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded

                        })
    </div>

</div>

}


